--------------------------

学籍番号 : 16B16163
氏名 : 吉川純平

--------------------------

回答1 :
1.1) どのようにして、短い行数で実装できたのかの説明
Main15を継承して、コンストラクタの定義だけ変更して、Filter2からFilter9を呼び出すようにした。




1.2)各フィルタの説明
コメントを部分を有効にしたFilter2
ガウス関数をx方向で二階微分したものと、y方向で二階微分したものの和を、それぞれその画素の周りの
重みつき平均をとることで求め、スライダーの値が大きいほど、輪郭を白にして際立たせている。



Filter3
ガウス関数の各画素での値により、任意の点の周辺の画素の重み付き平均をとることで、
スライダーが大きい値をとるほど画像をよりぼかす処理をしている。



Filter4
スライダーの値をxと比例させて、yを定数として、中心(x,y)から半径50を部分画像とりて
切り取り出力する処理をしている。



Filter5
スライダーの値をxと比例させて、yを定数として、中心(x,y)の周りをガウス関数を用いて歪ませるしょりをしている。
中心から離れた画素を近くの画素(の配列)に代入することで実現している。



Filter6
各画素の周辺９点のRGBを挿入ソートにより、昇順に並べ、スライダーの値で0から8をとり、
小さい順にその値番目の要素を画素配列に代入している。



Filter7
赤、緑、青の最大値をスライダーに比例させ、透明度を変更させることによって、
赤、緑、青の最大値をスライダーに比例させたものが大きいほど、各RGB配列で
一つ前の画素の比率を大きくして、二つの画素で平均をとることで遅延しているように見えるようにしている。



Filter8
ビットシフトにより、各RGBを切り捨てることで、
各RGBがシフトされた分の整数倍に量子化されるようにしている。



Filter9
輝度をスライダーの値で割ってint型にしてからスライダーの値をかけることで、切り捨て処理を行うことにより、
輝度を量子化のようにしている。また、輝度で透明度を変更し、Filter7同様に遅延処理もしている。



今回の課題で特に学べたと感じたこと
歪み処理をするためにはガウス関数を用いること。