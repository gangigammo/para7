--------------------------

学籍番号 : 16B16163
氏名 : 吉川純平

--------------------------

回答3 :
3.1) ２つ目のソケット接続が開始した後で、それぞれのゲームが開始される
ようにした変更箇所の説明

1つ目のソケットが接続してstartしても、玉の初速を0にしたままにして、2つ目ソケットが接続したときに、
玉の初速を設定した。




3.2)
ゲームの終了条件
（3.4と合わせて回答したい場合は、「3.4)の回答を参照」と記すこと)

3.4の回答を参照




実装方針
out.finish()で終了させるようにした。




ソースコード中の実装部分
メソッドstart（）の中のthread2の中で時間をおいて終了させるようにした。





3.3)
空欄A: thread 
空欄B: Thread6
空欄C: Userinput

スレッドセーフで（ある)
スレッドセーフであると考える理由
参照も代入も別々に行われるから。
threadはvolatileで定義されていて、参照、代入されていても、その値に依存して、値を更新していないので
スレッドセーフであるから。


問題が生じる状況





3.4)
対戦ゲームのルール説明
（利用者に説明する遊び方）
ブロックを壊した数を点数とする。




ゲーム性を高めるためにルールで工夫した点
自機の下に玉が落ちたら１点減点するようにした。





ルールを実現するためにどう実装したかを説明
壁と玉が衝突したときに玉の軌道をかえるだけでなく、玉の座標が下の壁である場合はscoreを減点した。






ゲーム画面の改良点など、配布プログラムから改良した点
玉の初速度を上げ、退屈でないものにした。







3.5)
勝敗決定規則の説明
得点が50点になったら勝ちにした。





勝敗決定規則の実装法の説明
scoreが１点足されたときに、scoreの点を見て50を超えていたら、玉の速さを0にしてwhile文を
１フレームおいて抜けるようにした。また、メソッドstart()でscoreの値が50を超えたら描写を終了させた




3.6)
敗北案を表現するための画像加工フィルタの設計意図の説明
（どのように敗北感を演出するか）
画面を暗くする。




フィルタの実装法の説明
（技術的に、どのような演算を行ったかを説明）
out.gamerstate(gs);のgsの値を0から200に変更して実装した。




実装部分についての説明
(どのファイルのどの部分を変更して、ゲーム終了時の勝敗に従い、敗者側のカメラ
にのみ画像加工を施すよう実装したかを解説)
GameServer01のメソッドstart()でscoreが小さい方のout.gamerstate(gs);のgsの値を200にした。




3.7)
録画したファイル名とおよその再生時間
Game1616163.mp4
約40秒





------
来年度に向けた講義演習についての質問

講義・演習課題全体で一番記憶に残っている事柄は
スレッドセーフについて



演習で一番大変だった課題は何回目の何番目ですか
第　　5　回の　　3　番目


演習で一番将来役立ちそうだと思った課題は何回目の何番目ですか
第　　4　回の　　1　番目


今この講義演習に関連してより詳しく知りたいと思うこと（何点でも）
マルチスレッド




お疲れ様でした。




